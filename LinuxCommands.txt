1.grep - Grep is an acronym that stands for Global Regular Expression Print.
	Grep is a Linux / Unix command-line tool used to search for a string of characters in a specified file. The text search pattern is called a regular expression. When it finds a match, it prints the line with the result. The grep command is handy when searching through large log files.
Syntax:
	grep [options] pattern [files]
	
Options Description
	-c : This prints only a count of the lines that match a pattern
	-h : Display the matched lines, but do not display the filenames.
	-i : Ignores, case for matching
	-l : Displays list of a filenames only.
	-n : Display the matched lines and their line numbers.
	-v : This prints out all the lines that do not matches the pattern
	-e exp : Specifies expression with this option. Can use multiple times.
	-f file : Takes patterns from file, one per line.
	-E : Treats pattern as an extended regular expression (ERE)
	-w : Match whole word
	-o : Print only the matched parts of a matching line,
	 with each such part on a separate output line.

2.chmod- chmod command is used to change the access mode of a file.
	The name is an abbreviation of change mode.
Syntax :
	chmod [reference][operator][mode] file... 

	Reference   Class     	Description
	u          owner      	file's owner

	g          group      	users who are members of
							the file's group

	o          others     	users who are neither the
							file's owner nor members of 
							the file's group

	a          all       	All three of the above, same as ugo
	
	Operator  	Description
	+        	 Adds the specified modes to the
				specified classes

	-         	Removes the specified modes from 
				the specified classes

	=         	The modes specified are to be made
				the exact modes for the specified 
				classes
				
	Modes-
	r       Permission to read the file.
	w       Permission to write (or delete) the file.
	x       Permission to execute the file, or, in
			the case of a directory, search it.
			
3.chown- The chown command changes user ownership of a file, directory, or link in Linux.
	Syntax-
	chown [OPTIONS] USER[:GROUP] FILE(s)
	
4.ssh(Secure Shell)- SSH (Secure Shell) is a network protocol that enables secure remote connections between two systems. System admins use SSH utilities to manage machines, copy, or move files between systems. Because SSH transmits data over encrypted channels, security is at a high level.

SSH Option	Description
	-1	Instructs ssh to use protocol version 1
	-2	Instructs ssh to use protocol version 2.
	-4	Permits only IPv4 addresses.
	-6	Permits only IPv6 addresses.
	-A	Enables authentication agent connection forwarding. Use this option with caution.
	-a	Disables authentication agent connection forwarding.
	-b bind_address	Use this option on the local host with more than one address to set the source address of the connection.
	-C	Enables data compression for all files. Only to be used with slow connections.
	-c cipher_spec	Use to select a cipher specification. List the values separated by a comma.
	-E log_fileName	Attaches debug logs to log_file instead of standard error.
	-f	Sends ssh to background, even before entering a password or passphrase.
	-g	Permits remote hosts to connect to ports forwarded on a local machine.
	-q	Runs ssh in quiet mode. It suppresses most error or warning messages.
	-V	Displays the version of ssh tool and exits.
	-v	Prints debugging messages for ssh connection. The verbose mode is useful when troubleshooting configuration issues.
	-X	Use this option to enable X11 forwarding.
	-x	Disable X11 forwarding.	
	
5.du- du command, short for disk usage, is used to estimate file space usage.
	The du command can be used to track the files and directories which are consuming excessive amount of space on hard disk drive.	
	
Syntax :
	du [OPTION]... [FILE]...
	du [OPTION]... --files0-from=F	

options-
	-0, –null : end each output line with NULL
	-a, –all : write count of all files, not just directories
	–apparent-size : print apparent sizes, rather than disk usage.
	-B, –block-size=SIZE : scale sizes to SIZE before printing on console
	-c, –total : produce grand total
	-d, –max-depth=N : print total for directory only if it is N or fewer levels below command line argument
	-h, –human-readable : print sizes in human readable format
	-S, -separate-dirs : for directories, don’t include size of subdirectories
	-s, –summarize : display only total for each directory
	–time : show time of last modification of any file or directory.
	–exclude=PATTERN : exclude files that match PATTERN
	
6.df- The df command (short for disk free), is used to display information related to file systems about total space and available space.

Syntax :
	df [OPTION]... [FILE]...

Options-
	-a, –all : includes pseudo, duplicate and inaccessible file systems.
	-B, –block-size=SIZE : scales sizes by SIZE before printing them.
	-h, –human-readable : print sizes in power of 1024
	-H, –si: print sizes in power of 1000
	-i, –inodes : list inode information instead of block usage
	-l, –local : limit listing to local file systems
	-P, –portability : use POSIX output format
	–sync : invoke sync before getting usage info
	–total : elide all entries insignificant to available space, and produce grand total
	-t, –type=TYPE : limit listing to file systems of type TYPE
	-T, –print-type : print file system type
	
7.top- top command is used to show the Linux processes. It provides a dynamic real-time view of the running system. Usually, this command shows the summary 	information of the system and the list of processes or threads which are currently managed by the Linux Kernel.

8.free- In LINUX, there exists a command line utility for this and that is free command which displays the total amount of free space available along with the amount of memory used and swap memory in the system, and also the buffers used by the kernel.

Syntax:
	$free [OPTION]
	
options-
	-b, – -bytes : It displays the memory in bytes.
	-k, – -kilo : It displays the amount of memory in kilobytes(default).
	-m, – -mega : It displays the amount of memory in megabytes.
	-g, – -giga : It displays the amount of memory in gigabytes.
	– – tera : It displays the amount of memory in terabytes.
	-h, – -human : It shows all output columns automatically scaled to shortest three digit unit and display the units also of print out. The units used are B(bytes), K(kilos), M(megas), G(gigas), and T(teras).
	-c, – -count : It displays the output c number of times and this option actually works with -s option.
	-l, – -lohi : It shows the detailed low and high memory statistics
	-o, – -old : This option disables the display of the buffer adjusted line.
	-s, – -seconds : This option allows you to display the output continuously after s seconds delay. In actual, the usleepsystem call is used for microsecond resolution delay times.
	-t, – -total : It adds an additional line in the output showing the column totals.
	– -help : It displays a help message and exit.
	-V, – -version : It displays version info and exit.
	
9.Rsync - (Remote Sync) is a most commonly used command for copying and synchronizing files and directories remotely as well as locally in Linux/Unix systems. 	With the help of rsync command you can copy and synchronize your data remotely and locally across directories, across disks and networks, perform data backups and mirroring between two Linux machines

Basic syntax of rsync command-
	rsync options source destination
	
Some common options used with rsync commands
	-v : verbose
	-r : copies data recursively (but don’t preserve timestamps and permission while transferring data
	-a : archive mode, archive mode allows copying files recursively and it also preserves symbolic links, file permissions, user & group ownerships and 		timestamps
	-z : compress file data
	-h : human-readable, output numbers in a human-readable format
	
10. sh - sh is a command language interpreter that executes commands read from a command line string, the standard input, or a specified file.	
	
11.sed- sed is a stream editor. A stream editor is used to perform basic text transformations on an input stream (a file, or input from a pipeline). While in some ways similar to an editor which permits scripted edits (such as ed), sed works by making only one pass over the input(s), and is consequently more efficient. But it is sed's ability to filter text in a pipeline which particularly distinguishes it from other types of editors.

syntax-
	sed OPTIONS... [SCRIPT] [INPUTFILE...]
	
Options
	-n, --quiet, --silent	Suppress automatic printing of pattern space.
	-e script, --expression=script	Add the script script to the commands to be executed.
	-f script-file, --file=script-file	Add the contents of script-file to the commands to be executed.
	--follow-symlinks	Follow symlinks when processing in place.
	-i[SUFFIX], --in-place[=SUFFIX]	Edit files in place (this makes a backup with file extension SUFFIX, if SUFFIX is supplied).
	-l N, --line-length=N	Specify the desired line-wrap length, N, for the "l" command.
	--POSIX	Disable all GNU extensions.
	-r, --regexp-extended	Use extended regular expressions in the script.
	-s, --separate	Consider files as separate rather than as a single continuous long stream.
	-u, --unbuffered	Load minimal amounts of data from the input files and flush the output buffers more often.
	--help	Display a help message, and exit.
	--version	Output version information, and exit.
	
12.awk- Awk is a scripting language used for manipulating data and generating reports.The awk command programming language requires no compiling, and allows the user to use variables, numeric functions, string functions, and logical operators.	

Syntax:
	awk options 'selection _criteria {action }' input-file > output-file
	
Options:

-f program-file : Reads the AWK program source from the file 
                  program-file, instead of from the 
                  first command line argument.
-F fs            : Use fs for the input field separator

13.tar-The Linux “tar” stands for tape archive, which is used by large number of Linux/Unix system administrators to deal with tape drives backup. The tar 		command used to rip a collection of files and directories into highly compressed archive file commonly called tarball or tar, gzip and bzip in Linux. The tar is most widely used command to create compressed archive files and that can be moved easily from one disk to another disk or machine to machine.

Syntax:
	tar [options] [archive-file] [file or directory to be archived]
	
14.locate- locate command in Linux is used to find the files by name. There is two most widely used file searching utilities accessible to users are called find and locate. The locate utility works better and faster than find command counterpart because instead of searching the file system when a file search is initiated, it would look through a database. This database contains bits and parts of files and their corresponding paths on your system. By default, locate command does not check whether the files found in the database still exist and it never reports files created after the most recent update of the relevant database.

Syntax:
	locate [OPTION]... PATTERN...
	
Options:

	-b, –basename : Match only the base name against the specified patterns, which is the opposite of –wholename.
	-c, –count : Instead of writing file names on standard output, write the number of matching entries only.
	-d, –database DBPATH : Replace the default database with DBPATH. DBPATH is a : (colon) separated list of database file names. If more than one –database option is specified, the resulting path is a concatenation of the separate paths. An empty database file name is replaced by the default database. A database file name – refers to the standard input. Note that a database can be read from the standard input only once.
	-e, –existing : Print only entries that refer to files existing at the time locate is run.
	-L, –follow : When checking whether files exist (if the –existing option is specified), follow trailing symbolic links. This causes bro ken symbolic links to be omitted from the output. This option is the default behavior. The opposite can be specified using –nofollow.
	-h, –help : Write a summary of the available options to standard output and exit successfully.
	-i, –ignore-case : Ignore case distinctions when matching patterns.
	-l, –limit, -n LIMIT : Exit successfully after finding LIMIT entries. If the –count option is specified, the resulting count is also limited to LIMIT.
	-m, –mmap : Ignored, but included for compatibility with BSD and GNU locate.
	-P, –nofollow, -H : When checking whether files exist (if the –existing option is specified), do not follow trailing symbolic links. This causes broken symbolic links to be reported like other files.
	
This option is the opposite of –follow.
	-0, –null : Separate the entries on output using the ASCII NUL character instead of writing each entry on a separate line. This option is designed for interoperability with the –null option of GNU xargs.
	-S, –statistics : Write statistics about each read database to standard output instead of searching for files and exit successfully.
	-q, –quiet : Write no messages about errors encountered while reading and processing databases.
	-r, –regexp REGEXP : Search for a basic regexp REGEXP. No PATTERNs are allowed if this option is used, but this option can be specified multiple times.
	–regex : Interpret all PATTERNs as extended regexps.
	-s, –stdio : Ignored, for compatibility with BSD and GNU locate.
	-V, –version : Write information about the version and license of locate on standard output and exit successfully.
	-w, –wholename : Match only the whole path name against the specified patterns. This option is the default behavior. The opposite can be specified using –basename.
	
15.reboot- reboot command is used restart or reboot the system. In a Linux system administration, there comes a need to restart the server after the completion of some network and other major updates. It can be of software or hardware that are being carried on the server. The reboot is needed so that the changes that the user have done can be affected on the server.

Syntax:
	reboot [OPTIONS...]
	
Options:

	–help : This option prints a short help text and exit.
	–halt : This option halt the machine, regardless of which one of the three commands is invoked.
	-p, –poweroff : This option will going to power-off the machine, regardless of which one of the three commands is being invoked.
	–reboot : This option reboot the machine, regardless of which one of the three commands is invoked.
	-f, –force : This option force immediate halt, power-off, or reboot. When it is specified once, this results in the immediate but clean shutdown by the system manager. When it is specified twice, this results in immediate shutdown without contacting the system manager. See the description of the option –force in systemctl(1) for more details.
	-w, –wtmp-only : This option only writes wtmp shutdown entry, it do not actually halt, power-off, reboot.
	
16.service -The service command is used to run a System V init script. Usually all system V init scripts are stored in /etc/init.d directory and service command can be used to start, stop, and restart the daemons and other services under Linux. All scripts in /etc/init.d accepts and supports at least the start, stop, and restart commands.

Syntax
	service SCRIPT-Name COMMAND
	
The COMMAND can be at least start, stop, status, and restart.

17.systemctl-
	systemctl is used to examine and control the state of “systemd” system and service manager.
	systemd is system and service manager for Unix like operating systems(most of the distributions, not all). As the system boots up, the first process created, i.e. init process with PID = 1, is systemd system that initiates the userspace services.

Syntax :
systemctl [OPTIONS...] COMMAND [NAME...]

options-
systemctl options :

	-t, --type= : the argument in this case should be comma-separated list of unit types such as service and socket.
	--state= :  this is used to show only specified states, for example --state=failed, will show only failed units
	-a, --all:  show all units, regardless of their states
	-r, --recursive:  while listing units, show units of local containers also
	--show-types:  it shows types of sockets along with showing sockets.
	--job-mode : this option controls how to deal with already queued jobs in case of queuing a new job.
	--fail : similar to --job-mode=fail
	-i, --ignore-inhibitors:  When you request system shutdown or sleep state, it ignores inhibitor locks
	-q, --quite :  it suppresses printing of results of various commands and the hints about the truncated lines
	--no-block : don't wait synchronously for process to finish.
	--user : talk to service manager of calling user, instead of system.
	--no-wall : don't send wall message before power-off, halt or reboot.
	-f, --force : when used with enable override any conflicting symlinks.
	--message= : When used with halt, poweroff, reboot, kexec, you can display a short message specifying reason of operation.
	-n, --lines : When used with status, controls the no. of journal lines to show.
	-H, --host= : execute operation remotely. 